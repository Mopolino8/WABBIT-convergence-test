; WABBIT parameter file template.
; if you add new parameters, add them here.
; note values have to be declared "value=0;", with equal sign (=) and semicolon (;)

[Dimensionality]
; 2D or 3D problem?
dim=2;


[Blocks]
; size of each block, should be odd (17, 33, 65 etc)
number_block_nodes=17;
; ghost nodes for each block
number_ghost_nodes=4;
; number of datafields in heavy data array
number_data_fields=1;
; threshold value for thresholding wavelet coefficients
eps=5e-5;
; treelevel bounds
max_treelevel=8;
min_treelevel=1;
; switch for mesh adaption, 1=on, ...=off
adapt_mesh=1;
; adaptive initial conditon? i.e. create grid to respect error bounds
; default is same value as adapt_mesh
adapt_inicond=1;
; in some situations, it is necessary to create the intial grid, and then refine it for a couple of times.
; for example if one does non-adaptive non-equidistant spatial convergence tests. default is 0.
inicond_refinements=0;
; block distribution for balancing (also used for start distribution)
; [equal | sfc_z | sfc_hilbert]
; equal -> simple uniformly distribution
; sfc_z  -> space filling curve -> z-curve
; sfc_hilbert -> hilbert space filling curve
block_dist=sfc_hilbert;
; non uniform mesh correction: if 1 then wabbit synchronize redundant nodes
; at coarse blocks with data from fine blocks [ 1 | ... ]
non_uniform_mesh_correction=1;


[DomainSize]
; size of computational domain. Important for both wabbit and the physics modules
Lx=1;
Ly=1;
Lz=0;


[Saving]
; TODO: maybe this section is clumsy and should be revised.
; how many fields are you going to save?
N_fields_saved=1;
; how are the fields labeled?
field_names=phi;


[ACM-new]
c_0=50.0;
nu=1e-2;
gamma_p=1;
forcing=1;
discretization=FD_4th_central_optimized;
inicond=meanflow;
x_cntr=2 2 0;
R_cyl=0.5;


[ConvectionDiffusion]
; how many scalar fields do you want to solve?
N_scalars=1;
; note you need to specify one value per scalar field for ALL the below parameters
; if nu<1.0e-10 (or 0.0), diffusion is disabled.
nu=0.0;
; initial condition for the scalar(s)
inicond=blob;
blob_width=0.01;
; position of blob
x0=0.5;
y0=0.75;
z0=0;
; velocity field for transportation, [swirl,constant]
velocity=swirl;
; if the velocity profile is the swirl test, one sometimes would want to compute
; an incomplete swirl, i.e. Tmax and Tswirl to not agree. Set T_swirl here if you want
; the default is the same as the simulation duration
T_swirl=5.0;
; if constant velocity, these are the values
u0x=1.0;
u0y=1.0;
u0z=0.0;



[Time]
; final time to reach in simulation
time_max=2.5;
; number of time steps performed. if not set, default value is very large
nt=;
; CFL criterium
CFL=1.0;
; write method (write with fixed frequency or time ) [ fixed_freq | fixed_time ]
write_method=fixed_time;
; write frequency for output, choose very large number for disabling output on disk
write_freq=50;
; write time for output
write_time=1.25;
; method to calculate time step [ fixed | CFL_cond | lvl_fixed ]
time_step_calc=CFL_cond;
; fixed time step. if greater 0, then the time step is fixed no matter what.
; default is 0.0, so not used.
dt_fixed=0.0;
; largest time step, if you want to set one. dt is always smaller than that, if the
; value is greater 0. default is 0.0, so not used.
dt_max=0.0;

; butcher_tableau
; use your butcher_tableau for the Runge Kutta time step function
; e.g. RK4:
; butcher_tableau=(/ 0.0 0.0 0.0 0.0 0.0
; 0.5 0.5 0.0 0.0 0.0
; 0.5 0.0 0.5 0.0 0.0
; 1.0 0.0 0.0 1.0 0.0
; 0.0 0.16666666666666666 0.33333333333333331 0.33333333333333331  0.16666666666666666 /)


[Physics]
; type of RHS
; note: reading of other physics parameter depends on RHS init subroutine
; if parameter is not given: default value will be 0 or 1
; 2D_convection_diffusion -> scalar equation, need: u0, nu
; 2D_navier_stokes -> variables: rho, ux, uy
;                  -> parameter: Rs, Cv, Cp, Pr, mu0
; 3D_convection_diffusion -> scalar equation, need: u0, nu
; 3D_navier_stokes -> variables: rho, ux, uy, uz
;                  -> parameter: Rs, Cv, Cp, Pr, mu0
; 2D_advection     -> scalar equation, no parameter needed
physics_type=ConvDiff-new;

; ------------------------------------------------------------------------------------------------
; parameter for [2D/3D]_convection_diffusion
; convection velocity, can be different for each data field (first two values correspond to data field 1, ...)
u0=1.0 0.0; -1.0 0.0;

; diffusion coefficient, can be different for each data field (first value correspond to data field 1, ...)
nu=1e-4; 1e-2;

; variable names, note: number of names should be equal to number of datafields
names=ux uy p;

; ------------------------------------------------------------------------------------------------
; initial field (set additional parameters in according file in INI folder)
; [gauss_blob | vorticity_filaments | richtmyer_meshkov | shear_layer | ns_pressure_blob | read_from_files]
initial_cond=constant_acm;

; width of initial field (depends on Lx, Ly) or parameter for geometry for VPM (e.g. radius of a cylinder)
inicond_width=0.5;(for 2D Gauss blob, shear layer), 20.0_rk (for inicond sphere)

; input files that contain treecode, time, iteration, number of blocks and initial field
input_files=phi_000000000000.h5;


[Discretization]
; order of derivatives [ FD_2nd_central | FD_4th_central_optimized ]
order_discretization=FD_4th_central_optimized;
; order of refinement predictor [ multiresolution_4th | multiresolution_2nd ]
order_predictor=multiresolution_4th;
; boundary condition [ periodic ]
boundary_cond=periodic;
; filter type [no_filter | explicit_5pt | explicit_7pt | explicit_9pt | explicit_11pt | wavelet | bogey_shock]
filter_type=no_filter;
; filter frequency (note: set to very high value to dissable filtering
filter_freq=10;
; bogey shock detector threshold
r_th = 5e-3;


[VPM]
; Volume penalization method to take obstacles into account without adapting the
; grid. Penalization is an equation-dependent addon. It can not be used with all
; RHS, if the RHS does not support it.
; flag for penalization (0/1)
penalization=1;
; smooth mask for penalization term [0,1]. If the obstacle moves, this flag should
; be set, and in static cases as well. hard masks with only 0 and 1 are deprecated but
; included for completeness.
smooth_mask=1;
; penalization factor. Can be seen as porosity, so smaller values = harder walls
; Note for explicit time integration, dt < C_eta
C_eta=1e-3;
; geometry
geometry=cylinder;


[MPI]
; method for data exchange [ RMA_lock_unlock_get | RMA_lock_unlock_put | Non_blocking_Isend_Irecv ]
mpi_data_exchange=Non_blocking_Isend_Irecv ;


[Debug]
; 1 ... debuging for time measurements and testcases is active,
debug=1;
; unit tests
test_time_stepper=0;
test_spatial=0;
test_wavelet_comp=0;
test_ghost_nodes_synch=1;
test_treecode=0;
